var
  $ = function (sel) { return document.querySelector(sel); },
  $$ = function (sel) { return document.querySelectorAll(sel); }
;

var prepareTemplate = (function (doc) {
  "use strict";

  var templateCache = {};

  return function prepareTemplate (template, searchAndReplaces) {
    var temp, val, tagOpen, tagClose, tagCombined;

    if (templateCache[template]) {
      output = templateCache[template];
    } else {
      temp = doc.querySelector('[data-template="' + template + '"]')

      if (!temp) throw 'Template doesnâ€™t exist: ' + template;

      output = templateCache[template] = temp.innerHTML;
    }

    if (searchAndReplaces) {
      for (key in searchAndReplaces) {
        if (searchAndReplaces.hasOwnProperty(key)) {
          val = searchAndReplaces[key];
          tagOpen = '{{' + key + '}}\n?';
          tagClose = '{{/' + key + '}}\n?';
          tagCombined = tagOpen + '(.|\n|\r)+?' + tagClose + '\n?';

          if (val === true || val === false) {
            if (val === true) {
              output = output.replace(new RegExp(tagOpen, 'g'), '').replace(new RegExp(tagClose, 'g'), '');
            } else {
              output = output.replace(new RegExp(tagCombined, 'g'), '');
            }
          } else {
            output = output.replace(new RegExp(tagOpen, 'g'), val);
          }
        }
      }
    }

    return output;
  };

}(document));

(function ($, $$) {
  "use strict";

  var
    hash = window.location.hash.replace(/#/, ''),
    hashBits,
    defaults = [],

    $controls = $('#controls'),

    view = function view (name, vals) {
      return prepareTemplate(name, vals);
    },

    buildOutput = function () {
      window.location.hash = buildHash.join(';');
    }
  ;

  'keyup change submit'.split(' ').forEach(function (singleEvent) {
    $controls.addEventListener(singleEvent, function (e) {
      e.preventDefault();
      buildOutput();
    });
  });

  if (hash) {
    hashBits = hash.split(';');
    defaults = [];

    hashBits.forEach(function (item) {
      defaults.push(item.split(','));
    });
  }

  defaults.forEach(function() {
    buildOutput();
  });

}($, $$));

(function ($, $$) {
  "use strict";

  var $help = $('.help-dialog');

  $('.help__close').addEventListener('click', function () {
    $help.setAttribute('data-state', 'hidden');
  });

  $('.help__open').addEventListener('click', function () {
    $help.setAttribute('data-state', 'visible');
  });

  $help.addEventListener('click', function () {
    $help.setAttribute('data-state', 'hidden');
  });

  $('.help').addEventListener('click', function (e) {
    e.stopPropagation();
  });

}($, $$));
